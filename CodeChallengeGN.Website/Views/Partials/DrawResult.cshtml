@using CodeChallengeGN.Website.Helpers
@model CodeChallengeGN.Website.Models.DrawResultModel


<div class="code-challenge__result">
    <div class="code-challenge__result-logo">
        <img src="@Model.DrawLogoSrcLocal" alt="@Model.ProductId" /> 
    </div>
    <div class="code-challenge__result__details">
        <div class="code-challenge__result__details__top">
            <div class="code-challenge__result__product-id">
                @Html.DisplayFor(modelItem => Model.ProductId)
            </div>
            <div class="code-challenge__result__draw-number">
                Draw No. @Html.DisplayFor(modelItem => Model.DrawNumber)
            </div>
            <div class="code-challenge__result__draw-date">
                @Html.DisplayFor(modelItem => Model.DrawDateStr)
            </div>
            <div class="code-challenge__result__draw-numbers">
                @foreach (var primaryNumber in Model.PrimaryNumbers)
                {
                    if (primaryNumber < 99)
                    {
                        <div class="code-challenge__result__draw-numbers__number code-challenge__result__draw-numbers__number--circle code-challenge__result__draw-numbers__number--circle-primary">
                            @primaryNumber
                        </div>
                    }
                    else
                    {
                        <div class="code-challenge__result__draw-numbers__number code-challenge__result__draw-numbers__number">
                            @primaryNumber,
                        </div>
                    }
                }
                @foreach (var secondaryNumber in Model.SecondaryNumbers)
                {
                    if (secondaryNumber < 99)
                    {
                        <div class="code-challenge__result__draw-numbers__number code-challenge__result__draw-numbers__number--circle code-challenge__result__draw-numbers__number--circle-secondary">
                            @secondaryNumber
                        </div>
                    }
                    else
                    {
                        <div class="code-challenge__result__draw-numbers__number code-challenge__result__draw-numbers__number">
                            @secondaryNumber,
                        </div>
                    }
                }
            </div>
        </div>
        <div class="code-challenge__result__details__bottom">
            <div class="code-challenge__result__draw-jackpot">
                @if (Model.JackPotWinnersCount > 0)
                {
                <div class="code-challenge__result__draw-jackpot__value">
                    @(FormattingHelper.FloatToDollarString(Model.JackPot))
                </div>
                }
                else
                {
                    @("JackPot not won")
                }
            </div>
            <div class="code-challenge__result__draw-jackpot-winners">
                @Html.DisplayFor(modelItem => Model.JackPotWinnersCount) Division 1 @(Model.JackPotWinnersCount==1?"Winner":"Winners"),

                @if (Model.JackPotWinnersCount > 1)
                {
                    <div class="code-challenge__result__draw-jackpot-winners__each">
                        each winning:
                        @(FormattingHelper.FloatToDollarString(Model.JackPot/ Model.JackPotWinnersCount))
                    </div>
                }
            </div>
        </div>
    </div>
</div>
